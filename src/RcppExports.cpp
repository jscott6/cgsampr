// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

using IM = IntegerMatrix;
using IV = IntegerVector;

// constructGraph
IM constructGraph(IV out_degree, IV in_degree, IM fixed, bool weighted);
RcppExport SEXP _cgsampr_constructGraph(SEXP out_degreeSEXP, SEXP in_degreeSEXP, SEXP fixedSEXP, SEXP weightedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IV >::type out_degree(out_degreeSEXP);
    Rcpp::traits::input_parameter< IV >::type in_degree(in_degreeSEXP);
    Rcpp::traits::input_parameter< IM >::type fixed(fixedSEXP);
    Rcpp::traits::input_parameter< bool >::type weighted(weightedSEXP);
    rcpp_result_gen = Rcpp::wrap(constructGraph(out_degree, in_degree, fixed, weighted));
    return rcpp_result_gen;
END_RCPP
}
// initFixed
IM initFixed(IM adjacency_matrix, IM fixed, bool search);
RcppExport SEXP _cgsampr_initFixed(SEXP adjacency_matrixSEXP, SEXP fixedSEXP, SEXP searchSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IM >::type adjacency_matrix(adjacency_matrixSEXP);
    Rcpp::traits::input_parameter< IM >::type fixed(fixedSEXP);
    Rcpp::traits::input_parameter< bool >::type search(searchSEXP);
    rcpp_result_gen = Rcpp::wrap(initFixed(adjacency_matrix, fixed, search));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP run_testthat_tests();
RcppExport SEXP _rcpp_module_boot_base_module();
RcppExport SEXP _rcpp_module_boot_graph_module();

static const R_CallMethodDef CallEntries[] = {
    {"_cgsampr_constructGraph", (DL_FUNC) &_cgsampr_constructGraph, 4},
    {"_cgsampr_initFixed", (DL_FUNC) &_cgsampr_initFixed, 3},
    {"_rcpp_module_boot_base_module", (DL_FUNC) &_rcpp_module_boot_base_module, 0},
    {"_rcpp_module_boot_graph_module", (DL_FUNC) &_rcpp_module_boot_graph_module, 0},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_cgsampr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
