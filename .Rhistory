rm(list=ls())
quit()
detach(package:graphs)
rm(list=ls())
.rs.restartR()
library(graphs)
library(graphs)
UnweightedGraph
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0, n, n)
g <- new(UnweightedGraph, adj, fixed)
g$sampleStep()
g$sampleStep()
g$sampleStep()
detach(package:graphs)
rm(list=ls())
.rs.restartR()
library(graphs)
detach(package:graphs)
rm(list=ls())
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0, n, n)
g <- new(UnweightedGraph, adj, fixed)
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
detach(package:graphs)
rm(list=ls())
.rs.restartR()
library(graphs)
UnweightedGraph
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0, n, n)
g <- new(UnweightedGraph, adj, fixed)
adj
g$printData()
detach(package:graphs)
rm(list=ls())
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0, n, n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
detach(package:graphs)
rm(list=ls())
.rs.restartR()
library(graphs)
library(graphs)
UnweightedGraph
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0, n, n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
library(graphs)
r
?rbinom
n <- 10
adj <- rbinom(n*n,1,0.5)
adj
adj <- matrix(rbinom(n*n,1,0.5),n,n)
adj
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
# detach namespace, remove package and current objects
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
rm(list=ls())
detach(package:graphs)
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
rm(list=ls())
detach(package:graphs)
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$printData()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$sampleStep()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
n <- 10
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
g$sampleStep()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$sampleStep()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
b
b
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$sampleStep()
rm(list=ls())
detach(package:graphs)
remove.packages("graphs")
.rs.restartR()
library(graphs)
n <- 10
adj <- matrix(rbinom(n*n,1,0.5),n,n)
fixed <- matrix(0,n,n)
g <- new(UnweightedGraph, adj, fixed)
g$sampleStep()
g$adjacency_matrix
adj
res <- g$sample(100,10,100)
res[[1]]
res[[4]]
rowSums(res[[1]])
colSums(res[[1]])
rowSums(res[[50]])
colSums(res[[50]])
res <- g$sample(1e5,4,1e3)
t(adj)
t(adj)*adj
sum(t(adj)*adj)/2
diag(n)
1-diag(n)
T <- function(x)
{
sum(t(x)*x*(1-diag(n)))/2
}
T(adj)
samples <- sapply(res, T)
plot(samples[1:1e3])
plot(samples[1:1e3], type = 'o')
plot(hist(samples))
library(cgsampr)
library(cgsampr)
rm(list=ls())
library(cgsampr)
detach(cgsampr)
detach(packages::cgsampr)
detach(packages:cgsampr)
library(cgsampr)
# load in data and get adjacency matrix
data("ChesapeakeBay")
library(cheddar)
# load in data and get adjacency matrix
data("ChesapeakeBay")
ChesapeakeBay = RemoveCannibalisticLinks(ChesapeakeBay)
# get adjacency matrix and fixed value locations
adj <- PredationMatrix(ChesapeakeBay)
fixed <- diag(nrow(adj))
# instantiate graph object
g <- new(UnweightedGraph, adj, fixed)
g
g$adjacency_matrix
g$fixed
adj[,1]
as.numeric(adj[,1])
install.packages("rmarkdown")
devtools::use_vignette("my-vignette")
install.packages("root")
library(devtools)
devtools::use_vignette("my-vignette")
devtools::use_vignette("my-vignette")
setwd("~/Documents/R/Library/cgsampr")
devtools::use_vignette("my-vignette")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
```{r, echo=FALSE, results='asis'}
```{r setup, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
matrix(,4,4)
a <- matrix(,4,4)
a
a[1:2,1:2]
a[1:2,1:2] <- 1
a[3:4,3:4] <- 1
a
a[1:2,3:4] <- 0
a[3:4,1:2] <- 0
a
library(igraph)
graph_from_adjacency_matrix(a)
i <- graph_from_adjacency_matrix(a)
plot(i)
a <- matrix(,4,4)
a[1:2,1:2] <- 0
a[3:4,3:4] <- 0
a[1:2,3:4] <- 1
a[3:4,1:2] <- 1
library(igraph)
i <- graph_from_adjacency_matrix(a)
a <- matrix(,4,4)
a[1:2,1:2] <- 1
a[3:4,3:4] <- 1
a[1:2,3:4] <- 0
a[3:4,1:2] <- 0
a
f <- matrix(0,4,4)
a <- matrix(0,4,4)
f <- a
a[1:2,1:2] <- 1
a[3:4,3:4] <- 1
a
f
g <- new(UnweightedGraph, a, f)
g
g$adjacency_matrix
g$fixed
